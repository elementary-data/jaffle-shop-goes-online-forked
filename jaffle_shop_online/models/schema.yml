version: 2

models:
  - name: customers
    description: This table has basic information about a customer, as well as some
      derived facts based on a customer's orders
    meta:
      owner: "Maayan"
    config:
      elementary:
        timestamp_column: "signup_date"
      tags:
        - customer-data
        - pii
    columns:
      - name: customer_id
        description: This is a unique identifier for a customer
        tests:
          - relationships:
              config:
                severity: warn
                owner: ["@data-ops"]
              to: ref('stg_signups')
              field: customer_id
          - not_null:
              config:
                severity: error
                owner: ["@data-ops"]
          - unique:
              config:
                severity: error
                owner: ["@data-ops"]
          - relationships:
              to: ref('stg_customers')
              field: customer_id
              config:
                severity: error
                owner: ["@data-ops"]

      - name: first_name
        description: Customer's first name. PII.
        tests:
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[A-Za-z ]+$'
              config:
                severity: warn
                owner: ["@data-ops"]

      - name: last_name
        description: Customer's last name. PII.
        tests:
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[A-Za-z ]+$'
              config:
                severity: warn
                owner: ["@data-ops"]

      - name: first_order
        description: Date (UTC) of a customer's first order
        tests:
          - dbt_expectations.expect_column_pair_values_to_be_in_set:
              column_b: most_recent_order
              value_pairs_set:
                - [<, >]  # first_order < most_recent_order
                - [=, =]  # first_order = most_recent_order (for customers with only one order)
              config:
                severity: error
                owner: ["@data-ops"]

      - name: most_recent_order
        description: Date (UTC) of a customer's most recent order

      - name: number_of_orders
        description: Count of the number of orders a customer has placed

      - name: customer_lifetime_value
        description: Total value (AUD) of a customer's orders
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              config:
                severity: error
                owner: ["@finance-team"]

      - name: customer_email
        description: Customer's email. PII.
        tests:
          - unique:
              config:
                owner: ["@data-ops"]
          - elementary.column_anomalies:
              config:
                owner: ["@data-ops"]
              column_anomalies:
                - missing_count

      - name: signup_date
        description: Date (UTC) of a customer's signup to the online shop.

    tests:
      - dbt_utils.expression_is_true:
          expression: "number_of_orders = (SELECT COUNT(DISTINCT order_id) FROM {{ ref('stg_orders') }} WHERE customer_id = customers.customer_id)"
          config:
            severity: error
            owner: ["@data-ops"]
      - dbt_utils.expression_is_true:
          expression: "customer_lifetime_value = (SELECT COALESCE(SUM(amount), 0) FROM {{ ref('stg_payments') }} JOIN {{ ref('stg_orders') }} USING (order_id) WHERE customer_id = customers.customer_id)"
          config:
            severity: error
            owner: ["@finance-team"]

  - name: orders
    description: This table has basic information about orders, as well as some derived
      facts based on payments
    meta:
      owner: "Or"
    config:
      tags: ["finance", "sales"]
      elementary:
        timestamp_column: "order_date"

    tests:
      - elementary.dimension_anomalies:
          dimensions:
            - customer_id
          config:
            owner: ["@data-ops"]
            tags: ["stability"]
    columns:
      - name: order_id
        description: This is a unique identifier for an order

      - name: customer_id
        description: Foreign key to the customers table
        tests:
          - relationships:
              config:
                severity: warn
                owner: ["@data-ops"]
              to: ref('customers')
              field: customer_id

      - name: order_date
        description: Date (UTC) that the order was placed

      - name: status
        description: '{{ doc("orders_status") }}'
        tests:
          - accepted_values:
              config:
                tags: ["customer_success"]
                severity: warn
                owner: ["@data-ops"]
              values: ["placed", "shipped", "completed", "return_pending", "returned"]
          - dbt_expectations.expect_column_values_to_be_in_set:
              value_set: ["placed", "shipped", "completed", "return_pending", "returned"]
              quote_values: true
              config:
                severity: warn
                owner: ["@data-ops"]

      - name: amount
        description: Total amount (AUD) of the order
        tests:
          - elementary.column_anomalies:
              config:
                severity: warn
                owner: ["@data-ops"]
              column_anomalies:
                - zero_count
                - zero_percent

      - name: credit_card_amount
        description: Amount of the order (AUD) paid for by credit card

      - name: coupon_amount
        description: Amount of the order (AUD) paid for by coupon

      - name: bank_transfer_amount
        description: Amount of the order (AUD) paid for by bank transfer

      - name: gift_card_amount
        description: Amount of the order (AUD) paid for by gift card

  - name: returned_orders
    description: This table contains all of the returned orders
    meta:
      owner: "Or"
    config:
      tags: ["finance"]
      elementary:
        timestamp_column: "order_date"

    tests:
      - elementary.schema_changes:
          config:
            owner: ["@finance-team"]
    columns:
      - name: order_id
        description: This is a unique identifier for an order

      - name: customer_id
        description: Foreign key to the customers table
        tests:
          - relationships:
              config:
                severity: warn
                owner: ["@customer-team"]
              to: ref('customers')
              field: customer_id

      - name: order_date
        description: Date (UTC) that the order was placed

      - name: status
        description: '{{ doc("orders_status") }}'
        tests:
          - accepted_values:
              config:
                severity: warn
                owner: ["@customer-team"]
              values: ["return_pending", "returned"]

      - name: amount
        description: Total amount (AUD) of the order
        tests:
          - elementary.column_anomalies:
              config:
                owner: ["@finance-team"]
              column_anomalies:
                - zero_count
                - zero_percent

      - name: credit_card_amount
        description: Amount of the order (AUD) paid for by credit card

      - name: coupon_amount
        description: Amount of the order (AUD) paid for by coupon

      - name: bank_transfer_amount
        description: Amount of the order (AUD) paid for by bank transfer

      - name: gift_card_amount
        description: Amount of the order (AUD) paid for by gift card

  - name: lost_orders
    description: This table contains all of the lost orders
    meta:
      owner: "Or"
    config:
      tags: ["finance"]
      elementary:
        timestamp_column: "order_date"

    tests:
      - elementary.schema_changes_from_baseline
    columns:
      - name: order_id
        description: This is a unique identifier for an order
        data_type: integer

      - name: customer_id
        description: Foreign key to the customers table
        tests:
          - relationships:
              config:
                severity: warn
                owner: ["@customer-team"]
              to: ref('customers')
              field: customer_id

      - name: order_date
        description: Date (UTC) that the order was placed

      - name: status
        description: '{{ doc("orders_status") }}'
        tests:
          - accepted_values:
              config:
                severity: warn
                owner: ["@finance-team"]
              values: ["shipped", "return_pending"]

      - name: amount
        description: Total amount (AUD) of the order
        tests:
          - elementary.column_anomalies:
              config:
                severity: warn
                owner: ["@finance-team"]
              column_anomalies:
                - zero_count
                - zero_percent

      - name: credit_card_amount
        description: Amount of the order (AUD) paid for by credit card

      - name: coupon_amount
        description: Amount of the order (AUD) paid for by coupon

      - name: bank_transfer_amount
        description: Amount of the order (AUD) paid for by bank transfer

      - name: gift_card_amount
        description: Amount of the order (AUD) paid for by gift card
