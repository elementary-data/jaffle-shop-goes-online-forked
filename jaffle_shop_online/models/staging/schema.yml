version: 2

models:
  - name: orders
    tests:
      - unique:
          column_name: order_id  # Assuming order_id is the primary key
      - elementary.column_anomalies:
          column_name: amount
          anomaly_sensitivity: 2
          detection_period: 2 days
          timestamp_column: order_date  # Assuming order_date is the timestamp column

  - name: real_time_orders
    tests:
      - elementary.custom_sql:
          name: amount_less_than_max_price
          description: Validates that the amount field is less than or equal to the max price from the raw_products table
          sql: |
            SELECT *
            FROM {{ model }}
            WHERE amount > (SELECT MAX(price) FROM {{ source('jaffle_shop', 'raw_products') }})

  - name: stg_orders
    tests:
      - elementary.volume_anomalies:
          anomaly_sensitivity: 2
          detection_period: 2 days
          timestamp_column: created_at  # Assuming created_at is the timestamp column
      - elementary.freshness_anomalies:
          anomaly_sensitivity: 2
          detection_period: 2 days
          timestamp_column: created_at  # Assuming created_at is the timestamp column

  - name: stg_payments
    tests:
      - elementary.volume_anomalies:
          anomaly_sensitivity: 2
          detection_period: 2 days
          timestamp_column: created_at  # Assuming created_at is the timestamp column
      - elementary.freshness_anomalies:
          anomaly_sensitivity: 2
          detection_period: 2 days
          timestamp_column: created_at  # Assuming created_at is the timestamp column
